"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PaginationMeta:
    
    current_page: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('current_page') }})
    r"""Current page"""  
    total_count: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_count') }})
    r"""Total number of records"""  
    total_pages: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_pages') }})
    r"""Total number of pages"""  
    next_page: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('next_page'), 'exclude': lambda f: f is None }})
    r"""Next page"""  
    prev_page: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('prev_page'), 'exclude': lambda f: f is None }})
    r"""Previous page"""  
    